{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nexport let ErrorInterceptorService = /*#__PURE__*/(() => {\n  class ErrorInterceptorService {\n    constructor(authService) {\n      this.authService = authService;\n    }\n\n    intercept(req, next) {\n      return next.handle(req).pipe(catchError(err => {\n        if (err.status === 401) {\n          // auto logout if 401 response returned from api\n          this.authService.logout();\n          location.reload();\n        }\n\n        const error = err.error.responseMessage || err.statusText;\n        return throwError(error);\n      }));\n    }\n\n  }\n\n  ErrorInterceptorService.ɵfac = function ErrorInterceptorService_Factory(t) {\n    return new (t || ErrorInterceptorService)(i0.ɵɵinject(i1.AuthService));\n  };\n\n  ErrorInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorInterceptorService,\n    factory: ErrorInterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n  return ErrorInterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module"}